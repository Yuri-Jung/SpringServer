plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.bitc'
version = '0.0.2-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 여기서부터 추가되었다. 배포할 때 넣어준다.
//리액트 프로젝트 폴더를 변수에 저장한다. $projectDir 현재 스프링프로젝트의 폴더명  frontend: 리액트 프로젝트명 => frontendDir이라
// 사용하겠다고 선언한 것. 변수에다 경로 넣어준 것이다.
// 바꾸는 건 뭐 여기 변수명 정도
def frontendDir = "$projectDir/frontend"

// 리액트 소스코드 복사 장소 (스프링 안에)
sourceSets {
	main {
		resources {
			srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources{
	dependsOn "copyReactBuildFiles"
}

// 리액트 프로젝트의 모듈 install, 함수 선언
task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
//	 os에 따라 실행 방법 변경
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
		commandLine "npm.cmd", "audit", "fix"
		commandLine "npm.cmd", "install"
	}
	else{
		commandLine "npm", "audit", "fix"
		commandLine "npm", "install"
	}
}

// 리액트 프로젝트 빌드, 함수 선언
task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
//	 os에 따라서 npm build 방식 변경, react 프로젝트 빌드
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
		commandLine "npm.cmd", "run-script", "build"
	}
	else{
		commandLine "npm", "run-script", "build"
	}
}

// 리액트 프로젝트 빌드 파일을 스프링 프로젝트로 복사, 함수선언
task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
//	리액트 프로젝트 빌드 완료 파일 위치
	from "$frontendDir/build"  //위에 있는 변수. 그 변수 아래의 build라는 폴더를 기준으로
//	스프링 부트 프로젝트 빌드 파일 위치 중 resources/main/static 폴더
	into "$buildDir/resources/main/static"
}
// 배포 시 리액트 프로젝트의 배포 파일도 함께 포함한다
tasks.bootJar {
	dependsOn "copyReactBuildFiles"
}




